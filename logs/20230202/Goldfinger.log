2023-02-02 09:43:10 I Goldf Print           "Connet 20611 successfully!!!"
2023-02-02 09:43:10 I Goldf Get_alltests    "Get project name:Goldfinger id:20611 all testplans"
2023-02-02 09:43:12 I Goldf Get_alltests    "{9889773: {'id': 9889773, 'name': 'Audio DVT test plan', 'archived': False, 'index': '9889773:Audio DVT test plan'}, 10063946: {'id': 10063946, 'name': 'ESW Test Plan', 'archived': False, 'index': '10063946:ESW Test Plan'}, 10345084: {'id': 10345084, 'name': 'HW Test Plan', 'archived': False, 'index': '10345084:HW Test Plan'}, 10447358: {'id': 10447358, 'name': 'MT Test', 'archived': False, 'index': '10447358:MT Test'}, 9733678: {'id': 9733678, 'name': 'Product Verification Test Plan', 'archived': False, 'index': '9733678:Product Verification Test Plan'}}"
2023-02-02 09:43:12 I Goldf Get_alltests    "Get project name:Goldfinger id:20611 all testplans successful!!!"
2023-02-02 09:50:24 I Goldf tidy_alltestcas "579"
2023-02-02 09:51:35 I Goldf Print           "DROP TABLE IF EXISTS testcases:successful"
2023-02-02 09:51:35 I Goldf Print           "CREATE TABLE IF NOT EXISTS testcases (                             testplan_id INT,                             testplan_name TEXT,                             testgroup_id INT,                             testgroup_name TEXT,                             testcycle_id INT,                             testcycle_name TEXT,                             rel TEXT,                             id INT,                             uniqueid TEXT,                             name TEXT,                             status TEXT,                             upstream TEXT,                             downstream TEXT,                             executionDate TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:51:35 I Goldf update_database "Insert testcases table successful"
2023-02-02 09:51:35 I Goldf Print           "CREATE TABLE IF NOT EXISTS tests (                             testplan_id INT,                             testplan_name TEXT,                             testplan_status TEXT,                             rel TEXT, status TEXT,                             count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:51:35 I Goldf Print           "DELETE FROM tests WHERE date='2023-02-02':successful"
2023-02-02 09:51:35 I Goldf Print           "SELECT testplan_id FROM tests GROUP BY testplan_id:successful"
2023-02-02 09:51:35 I Goldf Print           "SELECT testplan_name FROM tests WHERE testplan_id=9889773 LIMIT 1:successful"
2023-02-02 09:51:35 I Goldf Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9889773:successful"
2023-02-02 09:51:35 I Goldf Print           "SELECT testplan_name FROM tests WHERE testplan_id=10063946 LIMIT 1:successful"
2023-02-02 09:51:35 I Goldf Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10063946:successful"
2023-02-02 09:51:35 I Goldf Print           "SELECT testplan_name FROM tests WHERE testplan_id=10345084 LIMIT 1:successful"
2023-02-02 09:51:35 I Goldf Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10345084:successful"
2023-02-02 09:51:35 I Goldf Print           "SELECT testplan_name FROM tests WHERE testplan_id=10447358 LIMIT 1:successful"
2023-02-02 09:51:35 I Goldf Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10447358:successful"
2023-02-02 09:51:35 I Goldf Print           "SELECT testplan_name FROM tests WHERE testplan_id=9733678 LIMIT 1:successful"
2023-02-02 09:51:35 I Goldf Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9733678:successful"
2023-02-02 09:51:35 I Goldf Print           "INSERT INTO tests (testplan_id, testplan_name, testplan_status, rel, status, count, date) SELECT testplan_id, testplan_name, 'Active' as testplan_status, rel, status, count((@rn := @rn + 1)) as count, '2023-02-02' as date FROM testcases cross join (select @rn := 0) const GROUP BY testplan_id, rel, status:successful"
2023-02-02 09:51:35 I Goldf update_database "Insert tests table successful"
2023-02-02 09:51:35 I Goldf Print           "CREATE TABLE IF NOT EXISTS testapproval (                                 rel TEXT, team TEXT, status TEXT, upstream TEXT, count INT, date TEXT                                 ) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:51:35 I Goldf Print           "DROP TABLE IF EXISTS alltestapproval:successful"
2023-02-02 09:51:35 I Goldf Print           "CREATE TABLE IF NOT EXISTS alltestapproval (                                 id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, team TEXT, upstream TEXT                                 ) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:51:35 I Goldf Print           "DELETE FROM testapproval WHERE date='2023-02-02':successful"
2023-02-02 09:51:35 I Goldf Print           "INSERT INTO testapproval (rel, team, status, count, date, upstream) SELECT rel, team, status, count((@rn := @rn + 1)) as count, '2023-02-02' as date, upstream FROM alltestapproval cross join (select @rn := 0) const GROUP BY rel, team, status, upstream:successful"
2023-02-02 09:51:40 I Goldf Get_allfeatuers "[]"
2023-02-02 09:51:40 I Goldf Print           "CREATE TABLE IF NOT EXISTS features (                                rel TEXT, status TEXT, count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:51:40 I Goldf Print           "CREATE TABLE IF NOT EXISTS allfeatures (                                id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT,test_status TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:51:40 I Goldf Print           "DELETE FROM features WHERE date='2023-02-02':successful"
2023-02-02 09:51:40 I Goldf Print           "INSERT INTO features (rel, status, count, date)                                 SELECT rel, status, count((@rn := @rn + 1)) as count, '2023-02-02' as date FROM allfeatures cross join (select @rn := 0) const GROUP BY rel, status:successful"
2023-02-02 09:51:42 I Goldf Get_allchangere "[]"
2023-02-02 09:51:42 I Goldf Print           "CREATE TABLE IF NOT EXISTS changes (                                 rel TEXT, status TEXT, priority TEXT,                                 requester TEXT, date TEXT, count INT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:51:42 I Goldf Print           "CREATE TABLE IF NOT EXISTS allchanges (                                 id INT, uniqueid TEXT, name TEXT,                                 status TEXT, rel TEXT, priority TEXT,                                 requester TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:51:42 I Goldf Print           "DELETE FROM changes WHERE date='2023-02-02':successful"
2023-02-02 09:51:42 I Goldf Print           "INSERT INTO changes (                                 rel, status, priority, requester, date, count)                                 SELECT rel, status, priority, requester, '2023-02-02' as date, count((@rn := @rn + 1)) as count FROM allchanges                                 cross join (select @rn := 0) const GROUP BY rel, status, priority, requester:successful"
2023-02-02 09:51:44 I Goldf Print           "CREATE TABLE IF NOT EXISTS designspec (                            rel TEXT, team TEXT, status TEXT, count INT, date text) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:51:44 I Goldf Print           "CREATE TABLE IF NOT EXISTS alldesignspec (                             id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, team TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:51:44 I Goldf Print           "DELETE FROM designspec WHERE date='2023-02-02':successful"
2023-02-02 09:51:44 I Goldf Print           "DELETE FROM alldesignspec WHERE id=10447236:successful"
2023-02-02 09:51:44 I Goldf Print           "DELETE FROM alldesignspec WHERE id=10447239:successful"
2023-02-02 09:51:44 I Goldf Print           "DELETE FROM alldesignspec WHERE id=10447240:successful"
2023-02-02 09:51:44 I Goldf Print           "DELETE FROM alldesignspec WHERE id=10447241:successful"
2023-02-02 09:51:44 I Goldf Print           "DELETE FROM alldesignspec WHERE id=10447242:successful"
2023-02-02 09:51:44 I Goldf Print           "DELETE FROM alldesignspec WHERE id=10447243:successful"
2023-02-02 09:51:44 I Goldf Print           "INSERT INTO designspec (rel, team, status, count, date) SELECT rel, team, status, count((@rn := @rn + 1)) as count, '2023-02-02' as date FROM alldesignspec cross join (select @rn := 0) const GROUP BY rel, team, status:successful"
2023-02-02 09:51:46 I Goldf Get_alluserstor "[]"
2023-02-02 09:51:46 I Goldf Print           "CREATE TABLE IF NOT EXISTS userstories (                 rel TEXT, status TEXT, count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:51:46 I Goldf Print           "CREATE TABLE IF NOT EXISTS alluserstories (                 id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:51:46 I Goldf Print           "DELETE FROM userstories WHERE date='2023-02-02':successful"
2023-02-02 09:51:46 I Goldf Print           "INSERT INTO userstories (rel, status, count, date) SELECT rel, status, count((@rn := @rn + 1)) as count, '2023-02-02' as date FROM alluserstories cross join (select @rn := 0) const GROUP BY rel, status:successful"
2023-02-02 09:52:49 I Goldf Get_alldefects  "[{'id': 10218793, 'name': 'MIT SKU cannot be updated by CTO', 'documentKey': 'Gold-BUG-31', 'statusId': 156536, 'status': 'Open', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156533, 'priority': 'Major', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-68'}, {'id': 10245912, 'name': 'JDO cannot recognize HS when it in DFU mode', 'documentKey': 'Gold-BUG-42', 'statusId': 156852, 'status': 'Ready for Review', 'teamId': 157345, 'team': 'DE SDK', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '9950035, 10145483, 10145500, 10323655', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-99'}, {'id': 10249043, 'name': '[DQT] Goldfinger DQT failed on Linux', 'documentKey': 'Gold-BUG-47', 'statusId': 156538, 'status': 'Closed', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156531, 'priority': 'Blocker', 'upstream': '9976798, 10152154, 10152294, 10152153, 10152293, 10152158, 10152289, 10152290', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-116'}, {'id': 10251163, 'name': '[Chapter9]Goldfinger DFU mode\'s Chapter9 fail in "Chapter 9 Testers[USB 2 devices]" and "HID Tests"', 'documentKey': 'Gold-BUG-50', 'statusId': 156538, 'status': 'Closed', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156531, 'priority': 'Blocker', 'upstream': '10145409', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-122'}, {'id': 10289640, 'name': 'CLONE - Goldfinger Current Consumption Test failed on suspend mode', 'documentKey': 'Gold-BUG-55', 'statusId': 156538, 'status': 'Closed', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156531, 'priority': 'Blocker', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/MOONR-32'}, {'id': 10292140, 'name': '[SP IOP, volume ,Zoom] Fail to preservate volume on zoom', 'documentKey': 'Gold-BUG-57', 'statusId': 156536, 'status': 'Open', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '10426348, 10426351, 10146781, 10326408', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-147'}, {'id': 10418935, 'name': 'CLONE - CLONE - [SDK Demo][Button takeover]only support "MMI_ACTION_TAP" for Volume Up/Down button, no "MMI_ACTION_PRESS"', 'documentKey': 'Gold-BUG-68', 'statusId': 156536, 'status': 'Open', 'teamId': 157345, 'team': 'DE SDK', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '10319821, 10319814, 10319820, 10319813, 10319815', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-187'}, {'id': 10437902, 'name': '[Partner certification, Zoom, Mac] Failed to end call after reconnecting DUT to PC during outgoing call', 'documentKey': 'Gold-BUG-69', 'statusId': 156536, 'status': 'Open', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156533, 'priority': 'Major', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-224'}, {'id': 10440249, 'name': '[FT]Miss call ready and call end audio feedback', 'documentKey': 'Gold-BUG-70', 'statusId': 156536, 'status': 'Open', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '9916626, 10319821', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-226'}, {'id': 10440343, 'name': '[FT]will have "unmute" voice prompt if end call in mute state', 'documentKey': 'Gold-BUG-71', 'statusId': 156536, 'status': 'Open', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '9916627, 10319820', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-227'}, {'id': 10441241, 'name': '[Partner Certification, zoom meeting, mac]No RCC during zoom meeting on MAC', 'documentKey': 'Gold-BUG-72', 'statusId': 156538, 'status': 'Closed', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-228'}, {'id': 10441471, 'name': '[Partner Certification, Alcatel] Cannot mute HS from OS side', 'documentKey': 'Gold-BUG-73', 'statusId': 156538, 'status': 'Closed', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156532, 'priority': 'Critical', 'upstream': '10419039, 10426342', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-229'}, {'id': 10442300, 'name': "[JDO]JDO can't enumerate Goldfinger device in DFU mode", 'documentKey': 'Gold-BUG-74', 'statusId': 156538, 'status': 'Closed', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156532, 'priority': 'Critical', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-230'}, {'id': 10443261, 'name': '[MP IOP,Volume]No RX during turning volume from 0 to maximum', 'documentKey': 'Gold-BUG-75', 'statusId': 156538, 'status': 'Closed', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156533, 'priority': 'Major', 'upstream': '10319871, 10319885, 10319873, 10319886, 10319887, 10319891, 10319875, 10319876, 10319883, 10319884, 10319888, 10319889', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-232'}, {'id': 10446813, 'name': '[JDO Recover, Mac] Evolve2 40 SE fail to recover from JDO on Mac', 'documentKey': 'Gold-BUG-76', 'statusId': 156536, 'status': 'Open', 'teamId': 156571, 'team': 'DE Online', 'priorityId': 156533, 'priority': 'Major', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-240'}, {'id': 10447100, 'name': '[SP IOP, volume ,Zoom on MAC] Fail to restore minimum volume after reconnecting HS', 'documentKey': 'Gold-BUG-77', 'statusId': 156538, 'status': 'Closed', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '10326450', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-242'}, {'id': 10447335, 'name': "[FT]The volume level of VP doesn't be linked with the normal volume level", 'documentKey': 'Gold-BUG-78', 'statusId': 156538, 'status': 'Closed', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '9938229, 10319807', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-243'}, {'id': 10450295, 'name': '[UI]UI defined "The LED should not blink 3 times when teams is not connected" should be wrong', 'documentKey': 'Gold-BUG-79', 'statusId': 156536, 'status': 'Open', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156535, 'priority': 'Trivial', 'upstream': '9919087, 10319853', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-247'}, {'id': 10455546, 'name': '[Audio]TX accompanied by abnormal noise when HS connect to OS with Hulk', 'documentKey': 'Gold-BUG-80', 'statusId': 156539, 'status': 'In Progress', 'teamId': 156853, 'team': 'Audio Engineering', 'priorityId': 156533, 'priority': 'Major', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-249'}, {'id': 10458046, 'name': "[Audio]TX become bad even miss when talker's hand surround the Mic", 'documentKey': 'Gold-BUG-81', 'statusId': 156538, 'status': 'Closed', 'teamId': 156574, 'team': 'QA', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-252'}, {'id': 10458181, 'name': '[Audio]the TX background noise removel is not so good', 'documentKey': 'Gold-BUG-82', 'statusId': 156538, 'status': 'Closed', 'teamId': 156574, 'team': 'QA', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-253'}, {'id': 10458572, 'name': 'Dual volume sync only partly implemented', 'documentKey': 'Gold-BUG-83', 'statusId': 156539, 'status': 'In Progress', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-254'}, {'id': 10460204, 'name': '[JDO]JDO show new inform in the Production Information group for Goldfinger', 'documentKey': 'Gold-BUG-84', 'statusId': 156536, 'status': 'Open', 'teamId': 156571, 'team': 'DE Online', 'priorityId': 156533, 'priority': 'Major', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-257'}, {'id': 10460275, 'name': 'CLONE - [Partner Certification, Alcatel] Cannot mute HS from OS side', 'documentKey': 'Gold-BUG-85', 'statusId': 156538, 'status': 'Closed', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156532, 'priority': 'Critical', 'upstream': '10426705, 10426704', 'jira': 'https://jabra1.atlassian.net/browse/MOONR-197'}, {'id': 10467519, 'name': 'Missing Rx audio in the middel of a teams call', 'documentKey': 'Gold-BUG-86', 'statusId': 156536, 'status': 'Open', 'teamId': 156853, 'team': 'Audio Engineering', 'priorityId': 156531, 'priority': 'Blocker', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-266'}, {'id': 10469187, 'name': 'Goldfinger SWB lower than Darwin', 'documentKey': 'Gold-BUG-87', 'statusId': 156538, 'status': 'Closed', 'teamId': 156853, 'team': 'Audio Engineering', 'priorityId': 156533, 'priority': 'Major', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-275'}, {'id': 10475477, 'name': 'CLONE - [Audio]TX accompanied by abnormal noise when HS connect to OS with Hulk', 'documentKey': 'Gold-BUG-88', 'statusId': 156536, 'status': 'Open', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156533, 'priority': 'Major', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-282'}, {'id': 10482160, 'name': '[EAP,Spotify] Could not Pause/Play music with button', 'documentKey': 'Gold-BUG-89', 'statusId': 156536, 'status': 'Open', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156533, 'priority': 'Major', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GOLDF-284'}, {'id': 10483057, 'name': 'CLONE - [EAP,Spotify] Could not Pause/Play music with button', 'documentKey': 'Gold-BUG-90', 'statusId': 156536, 'status': 'Open', 'teamId': 156569, 'team': 'ESW DECT', 'priorityId': 156533, 'priority': 'Major', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/MOONR-206'}]"
2023-02-02 09:52:49 I Goldf Print           "CREATE TABLE IF NOT EXISTS defects (                     rel TEXT, team TEXT, status TEXT, priority TEXT, count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:52:49 I Goldf Print           "CREATE TABLE IF NOT EXISTS alldefects (                     id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, team TEXT, priority TEXT, jira TEXT, upstream TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM defects WHERE date='2023-02-02':successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10218793:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10245912:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10249043:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10251163:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10289640:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10292140:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10418935:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10437902:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10440249:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10440343:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10441241:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10441471:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10442300:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10443261:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10446813:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10447100:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10447335:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10450295:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10455546:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10458046:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10458181:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10458572:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10460204:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10460275:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10467519:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10469187:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10475477:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10482160:successful"
2023-02-02 09:52:49 I Goldf Print           "DELETE FROM alldefects WHERE id = 10483057:successful"
2023-02-02 09:52:49 I Goldf Print           "Not enough parameters for the SQL statement"
2023-02-02 09:52:49 I Goldf Print           "INSERT INTO defects (rel, team, status, count, date, priority) SELECT rel, team, status, count((@rn := @rn + 1)) as count, '2023-02-02' as date, priority FROM alldefects cross join (select @rn := 0) const GROUP BY rel, team, status, priority:successful"
2023-02-02 09:58:44 I Goldf get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-02-02 09:59:07 I Goldf get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-02-02 09:59:19 I Goldf get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-02-02 09:59:28 I Goldf get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-02-02 10:00:12 I Goldf get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-02-02 10:03:55 I Goldf get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-02-02 10:03:57 I Goldf get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-02-02 10:04:00 I Goldf get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-02-02 10:04:00 I Goldf get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-02-02 10:05:03 I Goldf get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-02-02 10:07:38 I Goldf get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-02-02 10:07:38 I Goldf get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-02-02 10:07:57 I Goldf get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-02-02 10:07:57 I Goldf get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-02-02 10:08:00 I Goldf get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-02-02 10:08:00 I Goldf get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-02-02 10:10:10 I Goldf Print           "DROP TABLE IF EXISTS allrequirements:successful"
2023-02-02 10:10:10 I Goldf Print           "DROP TABLE IF EXISTS allcoverage:successful"
2023-02-02 10:10:10 I Goldf Print           "CREATE TABLE IF NOT EXISTS requirements (                        rel TEXT, status TEXT, count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 10:10:10 I Goldf Print           "CREATE TABLE IF NOT EXISTS allrequirements (                        id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, upstream TEXT, downstream TEXT, team TEXT, test_status TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 10:10:10 I Goldf Print           "CREATE TABLE IF NOT EXISTS coverage (                        team text, covered int, expected int, date text) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 10:10:10 I Goldf Print           "CREATE TABLE IF NOT EXISTS allcoverage (                        id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, verify TEXT, missing TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 10:10:10 I Goldf Print           "DELETE FROM requirements WHERE date='2023-02-02':successful"
2023-02-02 10:10:10 I Goldf Print           "DELETE FROM coverage WHERE date='2023-02-02':successful"
2023-02-02 10:10:10 I Goldf Print           "INSERT INTO requirements (rel, status, count, date) SELECT rel, status, count((@rn := @rn + 1)) as count, '2023-02-02' as date FROM allrequirements cross join (select @rn := 0) const GROUP BY rel, status:successful"
2023-02-02 10:10:10 I Goldf Print           "CREATE TABLE IF NOT EXISTS feattest (rel TEXT, status TEXT, count TEXT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 10:10:10 I Goldf Print           "CREATE TABLE IF NOT EXISTS reqtest (rel TEXT, status TEXT, count TEXT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-02-02 10:10:10 I Goldf Print           "SELECT id FROM allfeatures:successful"
2023-02-02 10:10:10 I Goldf Print           "SELECT id,upstream,downstream,team FROM allrequirements:successful"
2023-02-02 10:10:10 I Goldf Print           "SELECT id FROM allcoverage:successful"
2023-02-02 10:10:10 I Goldf Print           "SELECT * FROM testcases:successful"
