2023-01-09 11:45:25 I Polar Print           "Connet 20620 successfully!!!"
2023-01-09 11:45:25 I Polar Get_alltests    "Get project name:Polaris id:20620 all testplans"
2023-01-09 11:45:26 I Polar Get_alltests    "{}"
2023-01-09 11:45:26 I Polar Get_alltests    "Get project name:Polaris id:20620 all testplans successful!!!"
2023-01-09 11:45:26 I Polar tidy_alltestcas "0"
2023-01-09 11:45:26 I Polar Print           "DROP TABLE IF EXISTS testcases:successful"
2023-01-09 11:45:26 I Polar Print           "CREATE TABLE IF NOT EXISTS testcases (                             testplan_id INT,                             testplan_name TEXT,                             testgroup_id INT,                             testgroup_name TEXT,                             testcycle_id INT,                             testcycle_name TEXT,                             rel TEXT,                             id INT,                             uniqueid TEXT,                             name TEXT,                             status TEXT,                             upstream TEXT,                             downstream TEXT,                             executionDate TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 11:45:26 I Polar update_database "Insert testcases table successful"
2023-01-09 11:45:26 I Polar Print           "CREATE TABLE IF NOT EXISTS tests (                             testplan_id INT,                             testplan_name TEXT,                             testplan_status TEXT,                             rel TEXT, status TEXT,                             count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 11:45:26 I Polar Print           "DELETE FROM tests WHERE date='2023-01-09':successful"
2023-01-09 11:45:26 I Polar Print           "SELECT testplan_id FROM tests GROUP BY testplan_id:successful"
2023-01-09 11:45:26 I Polar Print           "INSERT INTO tests (testplan_id, testplan_name, testplan_status, rel, status, count, date) SELECT testplan_id, testplan_name, 'Active' as testplan_status, rel, status, count((@rn := @rn + 1)) as count, '2023-01-09' as date FROM testcases cross join (select @rn := 0) const GROUP BY testplan_id, rel, status:successful"
2023-01-09 11:45:26 I Polar update_database "Insert tests table successful"
2023-01-09 11:45:26 I Polar Print           "CREATE TABLE IF NOT EXISTS testapproval (                                 rel TEXT, team TEXT, status TEXT, upstream TEXT, count INT, date TEXT                                 ) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 11:45:26 I Polar Print           "DROP TABLE IF EXISTS alltestapproval:successful"
2023-01-09 11:45:26 I Polar Print           "CREATE TABLE IF NOT EXISTS alltestapproval (                                 id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, team TEXT, upstream TEXT                                 ) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 11:45:26 I Polar Print           "DELETE FROM testapproval WHERE date='2023-01-09':successful"
2023-01-09 11:45:26 I Polar Print           "INSERT INTO testapproval (rel, team, status, count, date, upstream) SELECT rel, team, status, count((@rn := @rn + 1)) as count, '2023-01-09' as date, upstream FROM alltestapproval cross join (select @rn := 0) const GROUP BY rel, team, status, upstream:successful"
2023-01-09 11:45:48 I Polar Get_allfeatuers "[{'id': 9540615, 'name': 'ID Concept and Wearingstyle', 'documentKey': 'Pol-FEAT-43', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540659, 'name': 'PC Dongle', 'documentKey': 'Pol-FEAT-79', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540616, 'name': 'Sustainability', 'documentKey': 'Pol-FEAT-148', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540617, 'name': 'USB Type-C interface', 'documentKey': 'Pol-FEAT-44', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540663, 'name': 'Support for Multiple Voice Assistants', 'documentKey': 'Pol-FEAT-83', 'statusId': 156410, 'status': 'Approved'}, {'id': 10022059, 'name': 'Voice assist mode.', 'documentKey': 'Pol-FEAT-768', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540655, 'name': 'Google qualified Google Wake word functionality', 'documentKey': 'Pol-FEAT-147', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540668, 'name': 'Call management, Bluetooth', 'documentKey': 'Pol-FEAT-87', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540670, 'name': 'Ear-gel sealing test for TWS headsets', 'documentKey': 'Pol-FEAT-95', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540671, 'name': 'Eargels', 'documentKey': 'Pol-FEAT-88', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540672, 'name': 'Factory reset', 'documentKey': 'Pol-FEAT-89', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540673, 'name': 'In- and out of ear detection', 'documentKey': 'Pol-FEAT-151', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540674, 'name': 'Visual status indication of cradle and earbuds', 'documentKey': 'Pol-FEAT-91', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540675, 'name': 'Music streaming and control', 'documentKey': 'Pol-FEAT-93', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540676, 'name': 'Mute reminder tones On / Off', 'documentKey': 'Pol-FEAT-94', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540677, 'name': 'Power off mode', 'documentKey': 'Pol-FEAT-96', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540678, 'name': 'Secure and Comfortable fit', 'documentKey': 'Pol-FEAT-97', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540679, 'name': 'Sound Modes', 'documentKey': 'Pol-FEAT-98', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540680, 'name': 'UI Configurable Buttons // MyControls', 'documentKey': 'Pol-FEAT-99', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540665, 'name': 'Voice guidance', 'documentKey': 'Pol-FEAT-85', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540649, 'name': 'Change headset language pack', 'documentKey': 'Pol-FEAT-71', 'statusId': 156410, 'status': 'Approved'}, {'id': 10146370, 'name': 'UI elements', 'documentKey': 'Pol-FEAT-792', 'statusId': 156409, 'status': 'Draft'}, {'id': 10086135, 'name': 'Natural Hearthrough', 'documentKey': 'Pol-FEAT-773', 'statusId': 156410, 'status': 'Approved'}, {'id': 10086136, 'name': 'Conversation Mode', 'documentKey': 'Pol-FEAT-774', 'statusId': 156410, 'status': 'Approved'}, {'id': 10086137, 'name': 'MySound Hearthrough', 'documentKey': 'Pol-FEAT-775', 'statusId': 156410, 'status': 'Approved'}, {'id': 10086138, 'name': 'Automatic Awareness Mode', 'documentKey': 'Pol-FEAT-776', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540544, 'name': 'Music Performance (Rx)', 'documentKey': 'Pol-FEAT-7', 'statusId': 156584, 'status': 'Proposal'}, {'id': 9540545, 'name': 'Communication Performance (Rx)', 'documentKey': 'Pol-FEAT-8', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540546, 'name': 'Hearthrough', 'documentKey': 'Pol-FEAT-9', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540547, 'name': 'Audio I/O', 'documentKey': 'Pol-FEAT-10', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540548, 'name': 'User Audio Configuration', 'documentKey': 'Pol-FEAT-11', 'statusId': 156584, 'status': 'Proposal'}, {'id': 9540549, 'name': 'Rx Noise Cancellation Performance', 'documentKey': 'Pol-FEAT-12', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540550, 'name': 'Communication Performance (Tx)', 'documentKey': 'Pol-FEAT-13', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540551, 'name': 'IEC 62368  (Part 1) Acoustic Energy Radiation', 'documentKey': 'Pol-FEAT-14', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540552, 'name': 'UL 62368 (Part 1, 2nd Annex DVJ) Acoustic Pressure Limiting', 'documentKey': 'Pol-FEAT-163', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540553, 'name': 'Acoustic Protection', 'documentKey': 'Pol-FEAT-15', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540554, 'name': 'Internal Audio Requirements (Music, Headset)', 'documentKey': 'Pol-FEAT-158', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540555, 'name': 'Active Noise Cancelling (ANC)', 'documentKey': 'Pol-FEAT-159', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540556, 'name': 'Internal Audio Requirements (Communication, Headset)', 'documentKey': 'Pol-FEAT-160', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540557, 'name': 'Sidetone', 'documentKey': 'Pol-FEAT-161', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540559, 'name': 'Google Bisto Voice Assistance Certification - Audio (Draft)', 'documentKey': 'Pol-FEAT-182', 'statusId': 156409, 'status': 'Draft'}, {'id': 10091648, 'name': 'MS Teams Certification v5.0 (Headsets) - Audio (Professionals Only)', 'documentKey': 'Pol-FEAT-778', 'statusId': 156410, 'status': 'Approved'}, {'id': 10091968, 'name': 'Audio Logging', 'documentKey': 'Pol-FEAT-780', 'statusId': 156409, 'status': 'Draft'}, {'id': 10094242, 'name': 'Fraunhofer LC3+ codec', 'documentKey': 'Pol-FEAT-781', 'statusId': 156410, 'status': 'Approved'}, {'id': 10094256, 'name': 'Dynamic Virtual Surround Sound audio, with headtracking (DVSS)', 'documentKey': 'Pol-FEAT-782', 'statusId': 156410, 'status': 'Approved'}, {'id': 10099767, 'name': 'Windnoise Performance', 'documentKey': 'Pol-FEAT-784', 'statusId': 156409, 'status': 'Draft'}, {'id': 10104268, 'name': 'ETSI Requirement (Professionals only)', 'documentKey': 'Pol-FEAT-786', 'statusId': 156410, 'status': 'Approved'}, {'id': 10104296, 'name': 'Google Meet Certification v2.0 (Headsets) - Audio (Professionals only)', 'documentKey': 'Pol-FEAT-787', 'statusId': 156410, 'status': 'Approved'}, {'id': 10104303, 'name': 'Zoom Certification v2.0 (Headsets) - Audio (Professional only)', 'documentKey': 'Pol-FEAT-788', 'statusId': 156410, 'status': 'Approved'}, {'id': 10104386, 'name': 'Rx Speech Level Normalization', 'documentKey': 'Pol-FEAT-789', 'statusId': 156410, 'status': 'Approved'}, {'id': 10147568, 'name': 'ANC Adaptive to environment', 'documentKey': 'Pol-FEAT-793', 'statusId': 156409, 'status': 'Draft'}, {'id': 10147635, 'name': 'ANC Adaptive to Fit', 'documentKey': 'Pol-FEAT-794', 'statusId': 156409, 'status': 'Draft'}, {'id': 10304199, 'name': 'Intel Bluetooth Accessory Certification', 'documentKey': 'Pol-FEAT-805', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540627, 'name': 'Battery performance', 'documentKey': 'Pol-FEAT-50', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540628, 'name': 'Charging', 'documentKey': 'Pol-FEAT-51', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540629, 'name': 'Conformance to Wireless Power Consortium (WPC)', 'documentKey': 'Pol-FEAT-52', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540630, 'name': 'Durability', 'documentKey': 'Pol-FEAT-53', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540633, 'name': 'Range, wireless', 'documentKey': 'Pol-FEAT-56', 'statusId': 156584, 'status': 'Proposal'}, {'id': 9540635, 'name': 'Sweat and water resistant', 'documentKey': 'Pol-FEAT-58', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540660, 'name': 'HW Platform', 'documentKey': 'Pol-FEAT-80', 'statusId': 156410, 'status': 'Approved'}, {'id': 10099111, 'name': 'Cradle compatible with Cypress wireless charging pad', 'documentKey': 'Pol-FEAT-783', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540537, 'name': 'Application Controlled Paring (MFi)', 'documentKey': 'Pol-FEAT-1', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540538, 'name': 'Find my head phones (App only)', 'documentKey': 'Pol-FEAT-2', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540539, 'name': 'Product Certification Markings via App (App only)', 'documentKey': 'Pol-FEAT-3', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540540, 'name': 'Product registration (App only)', 'documentKey': 'Pol-FEAT-4', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540541, 'name': 'Rate the device (App only)', 'documentKey': 'Pol-FEAT-5', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540542, 'name': 'Selection of Voice Assistant (App only)', 'documentKey': 'Pol-FEAT-6', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540645, 'name': 'Battery status', 'documentKey': 'Pol-FEAT-67', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540657, 'name': 'MySound - Hearing test in Sound+ (Platform BT)', 'documentKey': 'Pol-FEAT-77', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540658, 'name': 'MySound - Music & Communications mode (feature name may change !)', 'documentKey': 'Pol-FEAT-78', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540662, 'name': "Support for Mobile Communications App's", 'documentKey': 'Pol-FEAT-82', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540651, 'name': 'Device configuration changes synced to applications', 'documentKey': 'Pol-FEAT-73', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540648, 'name': 'Button takeover legacy support', 'documentKey': 'Pol-FEAT-70', 'statusId': 156410, 'status': 'Approved'}, {'id': 10099885, 'name': 'Edit pairing list', 'documentKey': 'Pol-FEAT-785', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540631, 'name': 'Global Design Quality Standard', 'documentKey': 'Pol-FEAT-54', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540632, 'name': 'MFi certified', 'documentKey': 'Pol-FEAT-55', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540634, 'name': 'Regulatory approvals', 'documentKey': 'Pol-FEAT-57', 'statusId': 156410, 'status': 'Approved'}, {'id': 10113533, 'name': 'TCO9 certification', 'documentKey': 'Pol-FEAT-790', 'statusId': 156410, 'status': 'Approved'}, {'id': 10114905, 'name': 'Compatible with global account environments (professional only)', 'documentKey': 'Pol-FEAT-791', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540664, 'name': 'TWS Mirroring', 'documentKey': 'Pol-FEAT-84', 'statusId': 156410, 'status': 'Approved'}, {'id': 10259002, 'name': 'Connected when in open cradle', 'documentKey': 'Pol-FEAT-796', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540652, 'name': 'Firmware update OTA', 'documentKey': 'Pol-FEAT-74', 'statusId': 156410, 'status': 'Approved'}, {'id': 10022105, 'name': 'Microsoft Swift Pair', 'documentKey': 'Pol-FEAT-769', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540647, 'name': 'Bluetooth pairing', 'documentKey': 'Pol-FEAT-69', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540654, 'name': 'Google Fast Pair', 'documentKey': 'Pol-FEAT-66', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540653, 'name': 'Google Bisto [Android only]', 'documentKey': 'Pol-FEAT-75', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540650, 'name': 'Customize Bluetooth name', 'documentKey': 'Pol-FEAT-72', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540656, 'name': 'Multi Use', 'documentKey': 'Pol-FEAT-76', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540646, 'name': 'Bluetooth Low Energy support', 'documentKey': 'Pol-FEAT-68', 'statusId': 156410, 'status': 'Approved'}, {'id': 10147639, 'name': 'IMU sensor protocol', 'documentKey': 'Pol-FEAT-795', 'statusId': 156409, 'status': 'Draft'}, {'id': 9540687, 'name': 'LE Audio Unicast', 'documentKey': 'Pol-FEAT-129', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540688, 'name': 'LE Audio Control', 'documentKey': 'Pol-FEAT-144', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540689, 'name': 'LE Audio Auracast Receiver', 'documentKey': 'Pol-FEAT-131', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540692, 'name': 'LE Audio Pairing', 'documentKey': 'Pol-FEAT-138', 'statusId': 156410, 'status': 'Approved'}, {'id': 10304158, 'name': 'Amazon Chime Certification (Professionals only)', 'documentKey': 'Pol-FEAT-801', 'statusId': 156410, 'status': 'Approved'}, {'id': 10304186, 'name': 'Avaya Certification (Professionals only)', 'documentKey': 'Pol-FEAT-804', 'statusId': 156410, 'status': 'Approved'}, {'id': 10304147, 'name': 'Cisco Webex Certification (Professionals only)', 'documentKey': 'Pol-FEAT-799', 'statusId': 156410, 'status': 'Approved'}, {'id': 10303909, 'name': 'Spotify Tap (Consumer only)', 'documentKey': 'Pol-FEAT-797', 'statusId': 156410, 'status': 'Approved'}, {'id': 10304179, 'name': 'Unify Certification (Professionals only)', 'documentKey': 'Pol-FEAT-803', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540637, 'name': 'Device Tracking', 'documentKey': 'Pol-FEAT-59', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540639, 'name': 'Item tracking', 'documentKey': 'Pol-FEAT-61', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540640, 'name': 'Jabra production support', 'documentKey': 'Pol-FEAT-62', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540641, 'name': 'SKU awareness', 'documentKey': 'Pol-FEAT-64', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540620, 'name': 'Accessories', 'documentKey': 'Pol-FEAT-46', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540621, 'name': 'Customized Engraving', 'documentKey': 'Pol-FEAT-165', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540622, 'name': 'Packaging', 'documentKey': 'Pol-FEAT-47', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540623, 'name': 'Quick Start Guide and Manuals', 'documentKey': 'Pol-FEAT-48', 'statusId': 156410, 'status': 'Approved'}, {'id': 9540624, 'name': 'SKUs', 'documentKey': 'Pol-FEAT-49', 'statusId': 156410, 'status': 'Approved'}, {'id': 10086139, 'name': 'Speech Attention Mode', 'documentKey': 'Pol-FEAT-777', 'statusId': 156412, 'status': 'Rejected'}, {'id': 10304116, 'name': 'Alcatel Certification (Professionals only)', 'documentKey': 'Pol-FEAT-798', 'statusId': 156412, 'status': 'Rejected'}, {'id': 10304167, 'name': 'Mitel Certification (Professionals only)', 'documentKey': 'Pol-FEAT-802', 'statusId': 156412, 'status': 'Rejected'}]"
2023-01-09 11:45:48 I Polar Print           "CREATE TABLE IF NOT EXISTS features (                                rel TEXT, status TEXT, count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 11:45:48 I Polar Print           "CREATE TABLE IF NOT EXISTS allfeatures (                                id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT,test_status TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 11:45:48 I Polar Print           "DELETE FROM features WHERE date='2023-01-09':successful"
2023-01-09 11:45:48 I Polar Print           "INSERT INTO features (rel, status, count, date)                                 SELECT rel, status, count((@rn := @rn + 1)) as count, '2023-01-09' as date FROM allfeatures cross join (select @rn := 0) const GROUP BY rel, status:successful"
2023-01-09 11:45:50 I Polar Get_allchangere "[]"
2023-01-09 11:45:50 I Polar Print           "CREATE TABLE IF NOT EXISTS changes (                                 rel TEXT, status TEXT, priority TEXT,                                 requester TEXT, date TEXT, count INT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 11:45:50 I Polar Print           "CREATE TABLE IF NOT EXISTS allchanges (                                 id INT, uniqueid TEXT, name TEXT,                                 status TEXT, rel TEXT, priority TEXT,                                 requester TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 11:45:50 I Polar Print           "DELETE FROM changes WHERE date='2023-01-09':successful"
2023-01-09 11:45:50 I Polar Print           "INSERT INTO changes (                                 rel, status, priority, requester, date, count)                                 SELECT rel, status, priority, requester, '2023-01-09' as date, count((@rn := @rn + 1)) as count FROM allchanges                                 cross join (select @rn := 0) const GROUP BY rel, status, priority, requester:successful"
2023-01-09 12:04:54 I Polar Print           "CREATE TABLE IF NOT EXISTS designspec (                            rel TEXT, team TEXT, status TEXT, count INT, date text) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 12:04:54 I Polar Print           "CREATE TABLE IF NOT EXISTS alldesignspec (                             id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, team TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 12:04:54 I Polar Print           "DELETE FROM designspec WHERE date='2023-01-09':successful"
2023-01-09 12:04:54 I Polar Print           "INSERT INTO designspec (rel, team, status, count, date) SELECT rel, team, status, count((@rn := @rn + 1)) as count, '2023-01-09' as date FROM alldesignspec cross join (select @rn := 0) const GROUP BY rel, team, status:successful"
2023-01-09 12:04:56 I Polar Get_alluserstor "[]"
2023-01-09 12:04:56 I Polar Print           "CREATE TABLE IF NOT EXISTS userstories (                 rel TEXT, status TEXT, count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 12:04:56 I Polar Print           "CREATE TABLE IF NOT EXISTS alluserstories (                 id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 12:04:56 I Polar Print           "DELETE FROM userstories WHERE date='2023-01-09':successful"
2023-01-09 12:04:56 I Polar Print           "INSERT INTO userstories (rel, status, count, date) SELECT rel, status, count((@rn := @rn + 1)) as count, '2023-01-09' as date FROM alluserstories cross join (select @rn := 0) const GROUP BY rel, status:successful"
2023-01-09 12:04:58 I Polar Get_alldefects  "[]"
2023-01-09 12:04:58 I Polar Print           "CREATE TABLE IF NOT EXISTS defects (                     rel TEXT, team TEXT, status TEXT, priority TEXT, count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 12:04:58 I Polar Print           "CREATE TABLE IF NOT EXISTS alldefects (                     id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, team TEXT, priority TEXT, jira TEXT, upstream TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 12:04:58 I Polar Print           "DELETE FROM defects WHERE date='2023-01-09':successful"
2023-01-09 12:04:58 I Polar Print           "INSERT INTO defects (rel, team, status, count, date, priority) SELECT rel, team, status, count((@rn := @rn + 1)) as count, '2023-01-09' as date, priority FROM alldefects cross join (select @rn := 0) const GROUP BY rel, team, status, priority:successful"
2023-01-09 12:06:11 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:06:16 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:06:21 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:07:27 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:08:35 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:08:43 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:08:47 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:09:18 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:09:26 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:09:40 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:09:48 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:09:51 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:09:55 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:09:58 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:10:01 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:10:05 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:10:16 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:10:48 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:10:52 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:10:55 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:10:59 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:02 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:05 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:09 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:12 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:16 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:20 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:24 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:27 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:31 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:34 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:37 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:41 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:45 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:48 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:50 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:53 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:56 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:11:58 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:01 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:06 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:09 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:12 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:15 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:20 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:23 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:26 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:30 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:33 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:36 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:41 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:12:58 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:13:01 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:13:04 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:13:08 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:13:11 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:13:14 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:13:18 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:13:33 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:13:36 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:13:39 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:13:42 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:13:45 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:13:48 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:19:48 I Polar get_multipickli "ESW Platform Test don't find the mainteam name from G_parameter"
2023-01-09 12:19:52 I Polar get_multipickli "ESW Platform Test don't find the mainteam name from G_parameter"
2023-01-09 12:19:55 I Polar get_multipickli "ESW Platform Test don't find the mainteam name from G_parameter"
2023-01-09 12:20:15 I Polar get_multipickli "ESW Platform Test don't find the mainteam name from G_parameter"
2023-01-09 12:20:19 I Polar get_multipickli "ESW Platform Test don't find the mainteam name from G_parameter"
2023-01-09 12:20:22 I Polar get_multipickli "ESW Platform Test don't find the mainteam name from G_parameter"
2023-01-09 12:20:39 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:20:40 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:20:43 I Polar get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-09 12:20:55 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:20:56 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:21:00 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:21:04 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:21:04 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:21:12 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:21:12 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:21:15 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:21:15 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:24:28 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:24:31 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:24:40 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:26:00 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:26:08 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:27:21 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:27:24 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:27:27 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:27:31 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:27:33 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:27:37 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:28:48 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:28:48 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:29:01 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:29:01 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:29:17 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:29:17 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:29:26 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:29:26 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:29:40 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:29:40 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:29:40 I Polar get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-09 12:29:44 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:30:29 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:30:45 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:30:47 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:30:47 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:30:50 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:30:50 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:30:52 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:30:52 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:30:54 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:30:54 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:30:57 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:30:57 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:30:59 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:30:59 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:31:01 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:31:01 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:31:06 I Polar get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-09 12:31:08 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:31:08 I Polar get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-09 12:31:10 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:31:13 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:31:15 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:31:17 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:31:19 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:31:21 I Polar get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-09 12:32:05 I Polar Print           "DROP TABLE IF EXISTS allrequirements:successful"
2023-01-09 12:32:05 I Polar Print           "DROP TABLE IF EXISTS allcoverage:successful"
2023-01-09 12:32:05 I Polar Print           "CREATE TABLE IF NOT EXISTS requirements (                        rel TEXT, status TEXT, count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 12:32:05 I Polar Print           "CREATE TABLE IF NOT EXISTS allrequirements (                        id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, upstream TEXT, downstream TEXT, team TEXT, test_status TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 12:32:05 I Polar Print           "CREATE TABLE IF NOT EXISTS coverage (                        team text, covered int, expected int, date text) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 12:32:05 I Polar Print           "CREATE TABLE IF NOT EXISTS allcoverage (                        id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, verify TEXT, missing TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 12:32:05 I Polar Print           "DELETE FROM requirements WHERE date='2023-01-09':successful"
2023-01-09 12:32:05 I Polar Print           "DELETE FROM coverage WHERE date='2023-01-09':successful"
2023-01-09 12:32:05 I Polar Print           "INSERT INTO requirements (rel, status, count, date) SELECT rel, status, count((@rn := @rn + 1)) as count, '2023-01-09' as date FROM allrequirements cross join (select @rn := 0) const GROUP BY rel, status:successful"
2023-01-09 12:32:05 I Polar Print           "CREATE TABLE IF NOT EXISTS feattest (rel TEXT, status TEXT, count TEXT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-09 12:32:05 I Polar Print           "CREATE TABLE IF NOT EXISTS reqtest (rel TEXT, status TEXT, count TEXT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
