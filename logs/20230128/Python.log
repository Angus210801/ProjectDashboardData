2023-01-28 06:00:47 I Pytho Print           "Connet 20446 successfully!!!"
2023-01-28 06:00:47 I Pytho Get_alltests    "Get project name:Python id:20446 all testplans"
2023-01-28 06:00:59 I Pytho Get_alltests    "{10468554: {'id': 10468554, 'name': ' Video Test Plan - Bundle with Crestron - Functional  AI', 'archived': False, 'index': '10468554: Video Test Plan - Bundle with Crestron - Functional  AI'}, 7372947: {'id': 7372947, 'name': 'Apollo Nightly Test', 'archived': False, 'index': '7372947:Apollo Nightly Test'}, 8140305: {'id': 8140305, 'name': 'Apollo Release Smoke Test', 'archived': False, 'index': '8140305:Apollo Release Smoke Test'}, 9839931: {'id': 9839931, 'name': 'Apollo Release Stress Test', 'archived': False, 'index': '9839931:Apollo Release Stress Test'}, 7887393: {'id': 7887393, 'name': 'Apollo Weekly Test', 'archived': False, 'index': '7887393:Apollo Weekly Test'}, 7209846: {'id': 7209846, 'name': 'Audio DVT test plan', 'archived': False, 'index': '7209846:Audio DVT test plan'}, 5773923: {'id': 5773923, 'name': 'HW DVT Plan', 'archived': False, 'index': '5773923:HW DVT Plan'}, 6781943: {'id': 6781943, 'name': 'HW Test Plan -Python Remote Controller', 'archived': False, 'index': '6781943:HW Test Plan -Python Remote Controller'}, 8193821: {'id': 8193821, 'name': 'kh clean up2', 'archived': True, 'index': '8193821:kh clean up2'}, 8193594: {'id': 8193594, 'name': 'kh1 clean up', 'archived': True, 'index': '8193594:kh1 clean up'}, 4859722: {'id': 4859722, 'name': 'MT Test Plan', 'archived': False, 'index': '4859722:MT Test Plan'}, 5311623: {'id': 5311623, 'name': 'Packaging transportation test', 'archived': False, 'index': '5311623:Packaging transportation test'}, 8776307: {'id': 8776307, 'name': 'Product Maintenance Test Plan', 'archived': False, 'index': '8776307:Product Maintenance Test Plan'}, 4767556: {'id': 4767556, 'name': 'Product Verification Test Plan', 'archived': False, 'index': '4767556:Product Verification Test Plan'}, 5418156: {'id': 5418156, 'name': 'Python Offering Quality Plan', 'archived': False, 'index': '5418156:Python Offering Quality Plan'}, 8676487: {'id': 8676487, 'name': 'Python Hinge insert assy Reliability test in Smooth', 'archived': False, 'index': '8676487:Python Hinge insert assy Reliability test in Smooth'}, 8067765: {'id': 8067765, 'name': 'Python Humidity and Artificial Sweat test for Wall Mount and Hinge bracket', 'archived': False, 'index': '8067765:Python Humidity and Artificial Sweat test for Wall Mount and Hinge bracket'}, 6019344: {'id': 6019344, 'name': 'Regulatory Compliance Test Plan', 'archived': False, 'index': '6019344:Regulatory Compliance Test Plan'}, 10204871: {'id': 10204871, 'name': 'SE Verification test plan', 'archived': False, 'index': '10204871:SE Verification test plan'}, 6960105: {'id': 6960105, 'name': 'SW Test Plan', 'archived': False, 'index': '6960105:SW Test Plan'}, 10252386: {'id': 10252386, 'name': 'SW Test Plan - Bundle with Crestron', 'archived': False, 'index': '10252386:SW Test Plan - Bundle with Crestron'}, 9430122: {'id': 9430122, 'name': 'SW Test Plan - Bundle with Lenovo', 'archived': False, 'index': '9430122:SW Test Plan - Bundle with Lenovo'}, 9721077: {'id': 9721077, 'name': 'SW Test Plan - HW Redesign', 'archived': False, 'index': '9721077:SW Test Plan - HW Redesign'}, 9619657: {'id': 9619657, 'name': 'SW Test Plan - HW Redesign', 'archived': True, 'index': '9619657:SW Test Plan - HW Redesign'}, 9752410: {'id': 9752410, 'name': 'SW Test Plan - Newport Platform', 'archived': False, 'index': '9752410:SW Test Plan - Newport Platform'}, 8936920: {'id': 8936920, 'name': 'SW Test Plan - VP1 and VP2', 'archived': False, 'index': '8936920:SW Test Plan - VP1 and VP2'}, 9592679: {'id': 9592679, 'name': 'SW Test Plan - VP3', 'archived': False, 'index': '9592679:SW Test Plan - VP3'}, 10420315: {'id': 10420315, 'name': 'SW Test Plan - VP3-SP1', 'archived': False, 'index': '10420315:SW Test Plan - VP3-SP1'}, 5416527: {'id': 5416527, 'name': 'UX Test plan', 'archived': False, 'index': '5416527:UX Test plan'}, 9311623: {'id': 9311623, 'name': 'Video  Test Plan -VP2 - AI Features IZ VD PC Video Quality  WB and IGV-Functional', 'archived': False, 'index': '9311623:Video  Test Plan -VP2 - AI Features IZ VD PC Video Quality  WB and IGV-Functional'}, 8961490: {'id': 8961490, 'name': 'Video - Automation - Regression', 'archived': False, 'index': '8961490:Video - Automation - Regression'}, 7164015: {'id': 7164015, 'name': 'Video SW Test Plan', 'archived': True, 'index': '7164015:Video SW Test Plan'}, 8012482: {'id': 8012482, 'name': 'Video SW Test Plan - AI Features IZ Virtual Director People Count Video Quality  Whiteboard', 'archived': False, 'index': '8012482:Video SW Test Plan - AI Features IZ Virtual Director People Count Video Quality  Whiteboard'}, 10273890: {'id': 10273890, 'name': 'Video Test Plan - Bundle with Crestron - Inter-Operability', 'archived': False, 'index': '10273890:Video Test Plan - Bundle with Crestron - Inter-Operability'}, 10273892: {'id': 10273892, 'name': 'Video Test Plan - Bundle with Crestron - Non Functional', 'archived': False, 'index': '10273892:Video Test Plan - Bundle with Crestron - Non Functional'}, 10273910: {'id': 10273910, 'name': 'Video Test Plan - Bundle with Crestron - Reliability', 'archived': False, 'index': '10273910:Video Test Plan - Bundle with Crestron - Reliability'}, 9430167: {'id': 9430167, 'name': 'Video Test Plan - Bundle with Lenovo - Inter-Operability', 'archived': False, 'index': '9430167:Video Test Plan - Bundle with Lenovo - Inter-Operability'}, 9431939: {'id': 9431939, 'name': 'Video Test Plan - Bundle with Lenovo - Non Functional', 'archived': False, 'index': '9431939:Video Test Plan - Bundle with Lenovo - Non Functional'}, 9431951: {'id': 9431951, 'name': 'Video Test Plan - Bundle with Lenovo - Reliability', 'archived': False, 'index': '9431951:Video Test Plan - Bundle with Lenovo - Reliability'}, 8043946: {'id': 8043946, 'name': 'Video Test Plan - Functional', 'archived': False, 'index': '8043946:Video Test Plan - Functional'}, 9735195: {'id': 9735195, 'name': 'Video Test Plan - HW Redesign - Functional', 'archived': False, 'index': '9735195:Video Test Plan - HW Redesign - Functional'}, 9726716: {'id': 9726716, 'name': 'Video Test Plan - HW Redesign - Inter-Operability', 'archived': False, 'index': '9726716:Video Test Plan - HW Redesign - Inter-Operability'}, 9737211: {'id': 9737211, 'name': 'Video Test Plan - HW Redesign - Non Functional ', 'archived': False, 'index': '9737211:Video Test Plan - HW Redesign - Non Functional '}, 9738134: {'id': 9738134, 'name': 'Video Test Plan - HW Redesign - Reliability ', 'archived': False, 'index': '9738134:Video Test Plan - HW Redesign - Reliability '}, 9737198: {'id': 9737198, 'name': 'Video Test Plan - HW Redesign- AI IZ VD Video Quality IGV  WB', 'archived': False, 'index': '9737198:Video Test Plan - HW Redesign- AI IZ VD Video Quality IGV  WB'}, 7915338: {'id': 7915338, 'name': 'Video Test Plan - Inter-Operability', 'archived': False, 'index': '7915338:Video Test Plan - Inter-Operability'}, 7915071: {'id': 7915071, 'name': 'Video Test Plan - Non Functional', 'archived': False, 'index': '7915071:Video Test Plan - Non Functional'}, 7998288: {'id': 7998288, 'name': 'Video Test Plan - Reliability', 'archived': False, 'index': '7998288:Video Test Plan - Reliability'}, 7915740: {'id': 7915740, 'name': 'Video Test Plan - Reliability Deleted', 'archived': True, 'index': '7915740:Video Test Plan - Reliability Deleted'}, 9308622: {'id': 9308622, 'name': 'Video Test Plan - VP2 - Functional ', 'archived': False, 'index': '9308622:Video Test Plan - VP2 - Functional '}, 9369395: {'id': 9369395, 'name': 'Video Test Plan - VP2 - Inter-Operability', 'archived': False, 'index': '9369395:Video Test Plan - VP2 - Inter-Operability'}, 9338368: {'id': 9338368, 'name': 'Video Test Plan - VP2 - Non Functional ', 'archived': False, 'index': '9338368:Video Test Plan - VP2 - Non Functional '}, 9335135: {'id': 9335135, 'name': 'Video Test Plan - VP2 - Reliability ', 'archived': False, 'index': '9335135:Video Test Plan - VP2 - Reliability '}, 10144843: {'id': 10144843, 'name': 'Video Test Plan - VP3 - AI IZ VD Video Quality Whiteboard  IGV ', 'archived': False, 'index': '10144843:Video Test Plan - VP3 - AI IZ VD Video Quality Whiteboard  IGV '}, 10141934: {'id': 10141934, 'name': 'Video Test Plan - VP3 - Functional', 'archived': False, 'index': '10141934:Video Test Plan - VP3 - Functional'}, 10122544: {'id': 10122544, 'name': 'Video Test Plan - VP3 - Inter-Operability', 'archived': False, 'index': '10122544:Video Test Plan - VP3 - Inter-Operability'}, 10122547: {'id': 10122547, 'name': 'Video Test Plan - VP3 - Non Functional ', 'archived': False, 'index': '10122547:Video Test Plan - VP3 - Non Functional '}, 10122549: {'id': 10122549, 'name': 'Video Test Plan - VP3 - Reliability ', 'archived': False, 'index': '10122549:Video Test Plan - VP3 - Reliability '}, 10442578: {'id': 10442578, 'name': 'Video Test Plan - VP3-SP1 - AI IZ VD Video Quality Whiteboard  IGV ', 'archived': False, 'index': '10442578:Video Test Plan - VP3-SP1 - AI IZ VD Video Quality Whiteboard  IGV '}, 10442547: {'id': 10442547, 'name': 'Video Test Plan - VP3-SP1 - Functional', 'archived': False, 'index': '10442547:Video Test Plan - VP3-SP1 - Functional'}, 10434460: {'id': 10434460, 'name': 'Video Test Plan - VP3-SP1 - Inter-Operability', 'archived': False, 'index': '10434460:Video Test Plan - VP3-SP1 - Inter-Operability'}, 10435228: {'id': 10435228, 'name': 'Video Test Plan - VP3-SP1 - Non Functional ', 'archived': False, 'index': '10435228:Video Test Plan - VP3-SP1 - Non Functional '}, 10436635: {'id': 10436635, 'name': 'Video Test Plan - VP3-SP1 - Reliability ', 'archived': False, 'index': '10436635:Video Test Plan - VP3-SP1 - Reliability '}}"
2023-01-28 06:00:59 I Pytho Get_alltests    "Get project name:Python id:20446 all testplans successful!!!"
2023-01-28 06:10:51 I Pytho get_testruns    "Error:Test testruns result is None,testplane:6960105"
2023-01-28 06:10:54 I Pytho get_testruns    "Error:Test testruns result is None,testplane:6960105"
2023-01-28 06:10:55 I Pytho get_testruns    "Error:Test testruns result is None,testplane:6960105"
2023-01-28 07:00:31 I Pytho tidy_alltestcas "13757"
2023-01-28 07:33:37 I Pytho Print           "DROP TABLE IF EXISTS testcases:successful"
2023-01-28 07:33:37 I Pytho Print           "CREATE TABLE IF NOT EXISTS testcases (                             testplan_id INT,                             testplan_name TEXT,                             testgroup_id INT,                             testgroup_name TEXT,                             testcycle_id INT,                             testcycle_name TEXT,                             rel TEXT,                             id INT,                             uniqueid TEXT,                             name TEXT,                             status TEXT,                             upstream TEXT,                             downstream TEXT,                             executionDate TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:33:39 I Pytho update_database "Insert testcases table successful"
2023-01-28 07:33:39 I Pytho Print           "CREATE TABLE IF NOT EXISTS tests (                             testplan_id INT,                             testplan_name TEXT,                             testplan_status TEXT,                             rel TEXT, status TEXT,                             count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:33:39 I Pytho Print           "DELETE FROM tests WHERE date='2023-01-28':successful"
2023-01-28 07:33:39 I Pytho Print           "SELECT testplan_id FROM tests GROUP BY testplan_id:successful"
2023-01-28 07:33:39 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10468554 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10468554:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=7372947 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=7372947:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=8140305 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=8140305:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9839931 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9839931:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=7887393 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=7887393:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=7209846 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=7209846:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=5773923 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=5773923:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=6781943 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=6781943:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=4859722 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=4859722:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=5311623 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=5311623:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=8776307 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=8776307:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=4767556 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=4767556:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=6019344 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=6019344:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10204871 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10204871:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=6960105 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=6960105:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10252386 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10252386:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9430122 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9430122:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9721077 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9721077:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9752410 LIMIT 1:successful"
2023-01-28 07:33:40 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9752410:successful"
2023-01-28 07:33:40 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=8936920 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=8936920:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9592679 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9592679:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10420315 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10420315:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=5416527 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=5416527:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9311623 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9311623:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=8961490 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=8961490:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=7164015 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Inactive' WHERE testplan_id=7164015:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=8012482 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=8012482:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10273890 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10273890:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10273892 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10273892:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10273910 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10273910:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9430167 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9430167:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9431939 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9431939:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9431951 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9431951:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=8043946 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=8043946:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9735195 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9735195:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9726716 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9726716:successful"
2023-01-28 07:33:41 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9737211 LIMIT 1:successful"
2023-01-28 07:33:41 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9737211:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9738134 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9738134:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9737198 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9737198:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=7915338 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=7915338:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=7915071 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=7915071:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=7998288 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=7998288:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9308622 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9308622:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9369395 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9369395:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9338368 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9338368:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=9335135 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=9335135:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10144843 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10144843:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10141934 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10141934:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10122544 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10122544:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10122547 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10122547:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10122549 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10122549:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10442578 LIMIT 1:successful"
2023-01-28 07:33:42 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10442578:successful"
2023-01-28 07:33:42 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10442547 LIMIT 1:successful"
2023-01-28 07:33:43 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10442547:successful"
2023-01-28 07:33:43 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10434460 LIMIT 1:successful"
2023-01-28 07:33:43 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10434460:successful"
2023-01-28 07:33:43 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10435228 LIMIT 1:successful"
2023-01-28 07:33:43 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10435228:successful"
2023-01-28 07:33:43 I Pytho Print           "SELECT testplan_name FROM tests WHERE testplan_id=10436635 LIMIT 1:successful"
2023-01-28 07:33:43 I Pytho Print           "UPDATE tests SET testplan_status='Active' WHERE testplan_id=10436635:successful"
2023-01-28 07:33:43 I Pytho Print           "INSERT INTO tests (testplan_id, testplan_name, testplan_status, rel, status, count, date) SELECT testplan_id, testplan_name, 'Active' as testplan_status, rel, status, count((@rn := @rn + 1)) as count, '2023-01-28' as date FROM testcases cross join (select @rn := 0) const GROUP BY testplan_id, rel, status:successful"
2023-01-28 07:33:43 I Pytho update_database "Insert tests table successful"
2023-01-28 07:33:43 I Pytho Print           "CREATE TABLE IF NOT EXISTS testapproval (                                 rel TEXT, team TEXT, status TEXT, upstream TEXT, count INT, date TEXT                                 ) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:33:43 I Pytho Print           "DROP TABLE IF EXISTS alltestapproval:successful"
2023-01-28 07:33:43 I Pytho Print           "CREATE TABLE IF NOT EXISTS alltestapproval (                                 id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, team TEXT, upstream TEXT                                 ) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:33:43 I Pytho Print           "DELETE FROM testapproval WHERE date='2023-01-28':successful"
2023-01-28 07:33:44 I Pytho Print           "INSERT INTO testapproval (rel, team, status, count, date, upstream) SELECT rel, team, status, count((@rn := @rn + 1)) as count, '2023-01-28' as date, upstream FROM alltestapproval cross join (select @rn := 0) const GROUP BY rel, team, status, upstream:successful"
2023-01-28 07:33:50 I Pytho Get_allfeatuers "[{'id': 10451518, 'name': 'Firmware update via Windows Update', 'documentKey': 'Pu-FEAT-474', 'statusId': 156410, 'status': 'Approved'}, {'id': 10451550, 'name': 'FWU support when Mass Storage Device is unavailable', 'documentKey': 'Pu-FEAT-475', 'statusId': 156584, 'status': 'Proposal'}]"
2023-01-28 07:33:50 I Pytho Print           "CREATE TABLE IF NOT EXISTS features (                                rel TEXT, status TEXT, count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:33:50 I Pytho Print           "CREATE TABLE IF NOT EXISTS allfeatures (                                id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT,test_status TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM features WHERE date='2023-01-28':successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=21431139:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=18593851:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=18578102:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=18405103:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=18101004:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=17755334:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=17755331:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=17254498:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=17172498:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=17172468:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=17149230:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=17149229:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16926946:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16926541:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16715871:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16531668:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16464040:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16464007:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16416894:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16375061:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16374983:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16374305:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16334737:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16327636:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16327631:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16327622:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16327620:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16327618:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16327616:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16327614:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16327610:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=16327607:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=15916630:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=15715329:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=15446741:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=15440278:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=15440275:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=15440251:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=15440248:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=15440245:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=15440242:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=15440238:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=15360230:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=14880390:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=14880255:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=14621427:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=14369214:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=14368674:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=14368662:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=14368638:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=14306682:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=13962657:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=13962612:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=13962531:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=13962204:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=13962072:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=13649280:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=13648992:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=13647171:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=13646934:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=13110954:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12825911:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12825893:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12590753:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12589301:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12589292:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12589067:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12589064:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12589046:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12589043:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12589040:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12588686:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12588587:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=12337310:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=11590461:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=11146533:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=11062593:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=10890279:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=10889271:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=10884522:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=10882386:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=10882350:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=10511094:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=10089663:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=10075068:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=9682198:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=9677371:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=9365055:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=9364860:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=9361998:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=9306567:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=9306417:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=9301617:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=9215292:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=9209031:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=9058379:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=9058322:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=10451518:successful"
2023-01-28 07:33:51 I Pytho Print           "DELETE FROM allfeatures WHERE id=10451550:successful"
2023-01-28 07:33:51 I Pytho Print           "INSERT INTO features (rel, status, count, date)                                 SELECT rel, status, count((@rn := @rn + 1)) as count, '2023-01-28' as date FROM allfeatures cross join (select @rn := 0) const GROUP BY rel, status:successful"
2023-01-28 07:33:56 I Pytho Get_allchangere "[{'id': 9233408, 'name': 'Visual indication for standby and passive people count', 'documentKey': 'Pu-CR-36', 'statusId': 156410, 'status': 'Approved', 'priorityId': 156643, 'priority': 'Not defined', 'req': 'Edgaras Stepukonis'}, {'id': 9209593, 'name': 'MAC Address clarifications - TAKE 2', 'documentKey': 'Pu-CR-35', 'statusId': 156411, 'status': 'Completed', 'priorityId': 156643, 'priority': 'Not defined', 'req': 'System Engineering'}]"
2023-01-28 07:33:56 I Pytho Print           "CREATE TABLE IF NOT EXISTS changes (                                 rel TEXT, status TEXT, priority TEXT,                                 requester TEXT, date TEXT, count INT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:33:56 I Pytho Print           "CREATE TABLE IF NOT EXISTS allchanges (                                 id INT, uniqueid TEXT, name TEXT,                                 status TEXT, rel TEXT, priority TEXT,                                 requester TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:33:56 I Pytho Print           "DELETE FROM changes WHERE date='2023-01-28':successful"
2023-01-28 07:33:56 I Pytho Print           "DELETE FROM allchanges WHERE id=9233408:successful"
2023-01-28 07:33:56 I Pytho Print           "DELETE FROM allchanges WHERE id=9209593:successful"
2023-01-28 07:33:56 I Pytho Print           "INSERT INTO changes (                                 rel, status, priority, requester, date, count)                                 SELECT rel, status, priority, requester, '2023-01-28' as date, count((@rn := @rn + 1)) as count FROM allchanges                                 cross join (select @rn := 0) const GROUP BY rel, status, priority, requester:successful"
2023-01-28 07:33:58 I Pytho Print           "CREATE TABLE IF NOT EXISTS designspec (                            rel TEXT, team TEXT, status TEXT, count INT, date text) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:33:58 I Pytho Print           "CREATE TABLE IF NOT EXISTS alldesignspec (                             id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, team TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:33:58 I Pytho Print           "DELETE FROM designspec WHERE date='2023-01-28':successful"
2023-01-28 07:33:58 I Pytho Print           "INSERT INTO designspec (rel, team, status, count, date) SELECT rel, team, status, count((@rn := @rn + 1)) as count, '2023-01-28' as date FROM alldesignspec cross join (select @rn := 0) const GROUP BY rel, team, status:successful"
2023-01-28 07:34:02 I Pytho Get_alluserstor "[]"
2023-01-28 07:34:02 I Pytho Print           "CREATE TABLE IF NOT EXISTS userstories (                 rel TEXT, status TEXT, count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:34:02 I Pytho Print           "CREATE TABLE IF NOT EXISTS alluserstories (                 id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:34:02 I Pytho Print           "DELETE FROM userstories WHERE date='2023-01-28':successful"
2023-01-28 07:34:02 I Pytho Print           "INSERT INTO userstories (rel, status, count, date) SELECT rel, status, count((@rn := @rn + 1)) as count, '2023-01-28' as date FROM alluserstories cross join (select @rn := 0) const GROUP BY rel, status:successful"
2023-01-28 07:35:13 I Pytho Get_alldefects  "[{'id': 9217995, 'name': '[Python-VP1-3.4.0-USB3.0]-Continuous distorted/horizontal split video stream and color fidelity observed while changing resolution .', 'documentKey': 'Pu-BUG-493', 'statusId': 156536, 'status': 'Open', 'teamId': 157047, 'team': 'Video Engineering', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '9217514, 9216854, 9217526, 9699979, 9700146, 9216890, 10435187, 9619200, 9369305, 9619230, 9369197, 9369312, 9487776, 9520848', 'jira': 'https://jabra1.atlassian.net/browse/PYT-1025'}, {'id': 9311399, 'name': '[reboot] JDO reset successful, Python will reboot after writing the address of the Jabra Xpress URL', 'documentKey': 'Pu-BUG-535', 'statusId': 156538, 'status': 'Closed', 'teamId': 157345, 'team': 'DE SDK', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/PYT-1138'}, {'id': 9336240, 'name': '[VP2 - IGV Mode] Python device audio is not muted (Showing White LED) when user tried to muted from Skype app', 'documentKey': 'Pu-BUG-541', 'statusId': 156539, 'status': 'In Progress', 'teamId': 157051, 'team': 'ESW WIFI', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '10448349, 9326907, 9326923, 9326935, 9326944', 'jira': 'https://jabra1.atlassian.net/browse/PYT-1155'}, {'id': 9433315, 'name': '[Python-VP1-VideoDistortion]-Observed vertical distorted lines in video while streaming in Zoom app', 'documentKey': 'Pu-BUG-580', 'statusId': 156536, 'status': 'Open', 'teamId': 157047, 'team': 'Video Engineering', 'priorityId': 156533, 'priority': 'Major', 'upstream': '10194764, 10448242', 'jira': 'https://jabra1.atlassian.net/browse/PYT-951'}, {'id': 9489984, 'name': '[Python-VP2-4.0.6]-Sometime Virtual Director is not working after Unplug and plug', 'documentKey': 'Pu-BUG-617', 'statusId': 156536, 'status': 'Open', 'teamId': 157047, 'team': 'Video Engineering', 'priorityId': 156533, 'priority': 'Major', 'upstream': '9521424, 9521450, 9700094, 9915117, 10195931, 10196012, 10196431, 9474695, 9487851, 9701732, 9474546, 9487730, 9701501, 9878296, 9915260, 10194698, 10447676, 10448080, 9474698, 9487857', 'jira': 'https://jabra1.atlassian.net/browse/PYT-1325'}, {'id': 9984842, 'name': '[FT,Video/4.1.4]There is a random green screen during switch resolution', 'documentKey': 'Pu-BUG-737', 'statusId': 156536, 'status': 'Open', 'teamId': 157047, 'team': 'Video Engineering', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '10163281, 10196101, 10448223', 'jira': 'https://jabra1.atlassian.net/browse/PYT-1769'}, {'id': 10032476, 'name': "[FT,longevity/4.1.4/4.1.5]After overnight Teams meeting, Intelligent Zoom can't work", 'documentKey': 'Pu-BUG-744', 'statusId': 156536, 'status': 'Open', 'teamId': 157047, 'team': 'Video Engineering', 'priorityId': 156533, 'priority': 'Major', 'upstream': '10126586, 10126596, 10440591, 10046438, 10234884, 10234876, 10440676, 10234881, 10440671, 10249703, 10249710, 10448345', 'jira': 'https://jabra1.atlassian.net/browse/PYT-1798'}, {'id': 10079432, 'name': 'MTR updater failure', 'documentKey': 'Pu-BUG-754', 'statusId': 156539, 'status': 'In Progress', 'teamId': 157051, 'team': 'ESW WIFI', 'priorityId': 156533, 'priority': 'Major', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/PYT-1898'}, {'id': 10155695, 'name': '[VP3] Observed MX Reboot (I2C write error - assuming MX is rebooting) while video is streaming', 'documentKey': 'Pu-BUG-767', 'statusId': 156537, 'status': 'Resolved', 'teamId': 157047, 'team': 'Video Engineering', 'priorityId': 156533, 'priority': 'Major', 'upstream': '10153856, 10126585, 10126596, 10126601, 10436619, 10440591, 10440627, 10125599, 10126527, 10126559, 10124682, 10126531, 10126530, 10207824, 10448344, 10234884, 10440675, 10234802, 10234882, 10440673', 'jira': 'https://jabra1.atlassian.net/browse/PYT-2048'}, {'id': 10156756, 'name': '[Python - VP3 - 5.0.2 - MTR] Observed the video flashing in shared content video when did the JPC 50 video stop', 'documentKey': 'Pu-BUG-768', 'statusId': 156536, 'status': 'Open', 'teamId': 157047, 'team': 'Video Engineering', 'priorityId': 156533, 'priority': 'Major', 'upstream': '10162948, 10163923, 10447668, 10448034, 10448124', 'jira': 'https://jabra1.atlassian.net/browse/PYT-2049'}, {'id': 10188642, 'name': '[Longevity]IGV video stream for one night, observe the whole device reboot from log', 'documentKey': 'Pu-BUG-783', 'statusId': 156537, 'status': 'Resolved', 'teamId': 157047, 'team': 'Video Engineering', 'priorityId': 156533, 'priority': 'Major', 'upstream': '10196754, 10123973', 'jira': 'https://jabra1.atlassian.net/browse/PYT-2110'}, {'id': 10214736, 'name': 'Upgrading to firmware 5.0.4 garbles the Ethernet MAC address', 'documentKey': 'Pu-BUG-796', 'statusId': 156538, 'status': 'Closed', 'teamId': 157051, 'team': 'ESW WIFI', 'priorityId': 156531, 'priority': 'Blocker', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/PYT-2149'}, {'id': 10322473, 'name': '[Core Dump] Panic code 165D/5725 detected (newport core_dump on 5.0.4)', 'documentKey': 'Pu-BUG-811', 'statusId': 156538, 'status': 'Closed', 'teamId': 157051, 'team': 'ESW WIFI', 'priorityId': 156535, 'priority': 'Trivial', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/PYT-2276'}, {'id': 10424107, 'name': '[Room Boundary] It would make sense to enforce the same limits for both runtime and defaults.', 'documentKey': 'Pu-BUG-815', 'statusId': 156536, 'status': 'Open', 'teamId': 157047, 'team': 'Video Engineering', 'priorityId': 156535, 'priority': 'Trivial', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/PYT-2333'}, {'id': 10435229, 'name': '[GAN-VB-Video Quality-Privacy Cover]-Observed video flicker for 20 sec when we put privacy cover while video was streaming', 'documentKey': 'Pu-BUG-816', 'statusId': 156536, 'status': 'Open', 'teamId': 157047, 'team': 'Video Engineering', 'priorityId': 156533, 'priority': 'Major', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/GAN-11006'}, {'id': 10457906, 'name': '[IM IOP, Compatibility] Unexpected white LED when P50 is connected to some devices, e.g., Screenbeam 1100 plus wireless presentation, MRT devices, Zoom Rooms devices.', 'documentKey': 'Pu-BUG-817', 'statusId': 156536, 'status': 'Open', 'teamId': 157051, 'team': 'ESW WIFI', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/PYT-2369'}, {'id': 10457932, 'name': '[IM IOP, Compatibility] No Tx and Camera output when working with wireless presentation Screenbeam 1100 plus on Mac OS', 'documentKey': 'Pu-BUG-818', 'statusId': 156536, 'status': 'Open', 'teamId': 157051, 'team': 'ESW WIFI', 'priorityId': 156534, 'priority': 'Minor', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/PYT-2370'}, {'id': 10460881, 'name': 'CTO Failure - "Device factory reset failed"', 'documentKey': 'Pu-BUG-819', 'statusId': 156536, 'status': 'Open', 'teamId': 157051, 'team': 'ESW WIFI', 'priorityId': 156535, 'priority': 'Trivial', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/PYT-2377'}, {'id': 10461694, 'name': '[Video] One device easy video freezes once IZ enabled', 'documentKey': 'Pu-BUG-820', 'statusId': 156537, 'status': 'Resolved', 'teamId': 157047, 'team': 'Video Engineering', 'priorityId': 156533, 'priority': 'Major', 'upstream': '', 'jira': 'https://jabra1.atlassian.net/browse/PYT-2378'}]"
2023-01-28 07:35:13 I Pytho Print           "CREATE TABLE IF NOT EXISTS defects (                     rel TEXT, team TEXT, status TEXT, priority TEXT, count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:35:13 I Pytho Print           "CREATE TABLE IF NOT EXISTS alldefects (                     id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, team TEXT, priority TEXT, jira TEXT, upstream TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM defects WHERE date='2023-01-28':successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 15354117:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 9217995:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 9311399:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 9336240:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 9433315:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 9489984:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 9984842:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10032476:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10079432:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10155695:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10156756:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10188642:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10214736:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10322473:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10424107:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10435229:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10457906:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10457932:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10460881:successful"
2023-01-28 07:35:13 I Pytho Print           "DELETE FROM alldefects WHERE id = 10461694:successful"
2023-01-28 07:35:13 I Pytho Print           "Not enough parameters for the SQL statement"
2023-01-28 07:35:13 I Pytho Print           "INSERT INTO defects (rel, team, status, count, date, priority) SELECT rel, team, status, count((@rn := @rn + 1)) as count, '2023-01-28' as date, priority FROM alldefects cross join (select @rn := 0) const GROUP BY rel, team, status, priority:successful"
2023-01-28 07:47:37 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 07:47:50 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 07:52:02 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 07:52:38 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 07:53:48 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 07:57:32 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 07:57:45 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 08:13:33 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 08:26:35 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 08:26:40 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 08:26:49 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 08:26:55 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 08:31:33 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 08:34:44 I Pytho get_multipickli "ESW Platform Test don't find the mainteam name from G_parameter"
2023-01-28 08:36:27 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 08:36:34 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 08:36:39 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 08:36:58 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 08:37:16 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 08:39:55 I Pytho get_multipickli "ESW Platform Test don't find the mainteam name from G_parameter"
2023-01-28 08:43:58 I Pytho get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-28 08:43:59 I Pytho get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-28 08:44:05 I Pytho get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-28 08:44:05 I Pytho get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-28 08:45:19 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 08:46:55 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 08:47:45 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 08:47:45 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 08:50:22 I Pytho get_multipickli "Digital Experience – Android don't find the mainteam name from G_parameter"
2023-01-28 08:50:24 I Pytho get_multipickli "Digital Experience – IOS don't find the mainteam name from G_parameter"
2023-01-28 08:57:32 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 09:28:29 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 09:29:57 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 09:30:30 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 09:31:45 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 09:31:50 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 09:31:55 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 09:32:05 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 09:33:43 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 09:34:02 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 09:34:52 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 09:35:42 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 09:36:07 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 09:36:55 I Pytho get_multipickli "Digital Experience – SDK don't find the mainteam name from G_parameter"
2023-01-28 09:40:22 I Pytho get_multipickli "Unassigned don't find the mainteam name from G_parameter"
2023-01-28 09:40:57 I Pytho Print           "DROP TABLE IF EXISTS allrequirements:successful"
2023-01-28 09:40:57 I Pytho Print           "DROP TABLE IF EXISTS allcoverage:successful"
2023-01-28 09:40:57 I Pytho Print           "CREATE TABLE IF NOT EXISTS requirements (                        rel TEXT, status TEXT, count INT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 09:40:57 I Pytho Print           "CREATE TABLE IF NOT EXISTS allrequirements (                        id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, upstream TEXT, downstream TEXT, team TEXT, test_status TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 09:40:57 I Pytho Print           "CREATE TABLE IF NOT EXISTS coverage (                        team text, covered int, expected int, date text) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 09:40:57 I Pytho Print           "CREATE TABLE IF NOT EXISTS allcoverage (                        id INT, uniqueid TEXT, name TEXT, status TEXT, rel TEXT, verify TEXT, missing TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 09:40:57 I Pytho Print           "DELETE FROM requirements WHERE date='2023-01-28':successful"
2023-01-28 09:40:57 I Pytho Print           "DELETE FROM coverage WHERE date='2023-01-28':successful"
2023-01-28 09:40:59 I Pytho Print           "INSERT INTO requirements (rel, status, count, date) SELECT rel, status, count((@rn := @rn + 1)) as count, '2023-01-28' as date FROM allrequirements cross join (select @rn := 0) const GROUP BY rel, status:successful"
2023-01-28 09:40:59 I Pytho Print           "CREATE TABLE IF NOT EXISTS feattest (rel TEXT, status TEXT, count TEXT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 09:40:59 I Pytho Print           "CREATE TABLE IF NOT EXISTS reqtest (rel TEXT, status TEXT, count TEXT, date TEXT) ENGINE=InnoDB DEFAULT CHARSET=utf8:successful"
2023-01-28 09:40:59 I Pytho Print           "SELECT id FROM allfeatures:successful"
2023-01-28 09:40:59 I Pytho Print           "SELECT id,upstream,downstream,team FROM allrequirements:successful"
2023-01-28 09:41:00 I Pytho Print           "SELECT id FROM allcoverage:successful"
2023-01-28 09:41:00 I Pytho Print           "SELECT * FROM testcases:successful"
